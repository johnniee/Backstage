apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: ArgoCD-Application
  title: Create a ArgoCD Application CRD
  description: BlaBla

spec:
  owner: user:yonatan.elkad
  type: kube_service
  parameters:
    # - title: Choose a Source Control Management tool to store your new website in.
    #   required:
    #     - repoUrl
    #   properties:
    #     repoUrl:
    #       title: Repository Location
    #       type: string
    #       ui:field: RepoUrlPicker
    #       ui:options:
    #         allowedHosts:
    #           - github.com
    # - title: Default branch on the repository
    #   required:
    #     - defaultBranch
    #   properties:
    #     defaultBranch:
    #       title: Default Branch
    #       type: string
    #       description: This will be used as the default branch on the repository

    - title: Provide The service details
      required:
        - service_name
        - project
        - chart_branch
        - files_path
        - owner
      properties:
        owner:
          title: Team
          type: string
          description: Team name
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        service_name:
          title: Service name
          type: string
          description: The K8s Service name.
        project:
          title: project
          type: string
          description: The Project
        chart_branch:
          title: Github Branch
          type: string
          description: The branch to load the chart from
        files_path:
          title: The values files path
          type: string
          description: The path to the values files

#             chartPath: values/<team>/<project>/<service_nmame>

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          service_name: ${{ parameters.service_name }}
          chart_branch: ${{ parameters.chart_branch }}
          helm_path: values/${{ parameteres.team }}/${{ parameters.project }}/${{ parameters.service_name }}
          files_path: ${{ parameters.helm_path }}
          owner: ${{ parameters.owner }}

    - id: publishToGitHub
      name: Publish to GitHub
      action: publish:github:pull-request
      input:
        # repoUrl: 'github.com?repo=${{ (parameters.repoUrl | parseRepoUrl)["repo"] }}&owner=${{ (parameters.repoUrl | parseRepoUrl)["owner"] }}'
        repoUrl: 'github.com?owner=johnniee&repo=Backstage'
        branchName: master
        # branchName: ${{ parameters.defaultBranch }}
        description: 'A static HTML website. Just like the good old days.'
        title: Add-service ${{ parameters.service_name }}

    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     # repoContentsUrl: ${{ steps.publishToGitHub.output.repoContentsUrl }}
    #     catalogInfoPath: '/catalog-info2.yaml'
  output:
    remoteUrl: ${{ steps.publishToGitHub.output.remoteUrl }}
